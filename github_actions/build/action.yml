name: Build
description: 'Build library'
inputs:
  repo-directory:
    description: 'Specifies source code location. If empty, source code will be downloaded to working-directory.'
    required: true
    default: ''
  working-directory:
    description: 'Working Directory'
    required: true
    default: '${{ github.workspace }}'
runs:
  using: "composite"
  steps:
    - uses: Silverlan/common_actions/action_start@main
      with:
        name: "util_image > build"
        input_values: "repo-directory: ${{inputs.repo-directory}},working-directory: ${{inputs.working-directory}}"
  
    - name: Initialize Env
      id: init-env
      uses: Silverlan/common_actions/set_common_env_vars@main
      with:
        working-directory: ${{inputs.working-directory}}
      
    - uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      name: CMake Build
      with:
        if: ${{inputs.repo-directory == ''}}
        step: |
          uses: Silverlan/common_actions/get_submodule_simple@main
          with:
            repo: 'Silverlan/util_image'
            cmake_var: 'DEPENDENCY_UTIL_IMAGE_INCLUDE'
            working-directory: ${{inputs.working-directory}}

    - name: Define nvtt CMake Variables
      uses: Silverlan/common_actions/define_cmake_var@main
      with:
        cmake_var: '-DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_INCLUDE=${{inputs.working-directory}}/third_party_libs/nvtt/src'
        #cmake_var: '-DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_BC6H_LIBRARY=${{ env.GA_ROOT_DIR }}/build/third_party_libs/nvtt/src/bc6h/${{ matrix.config.build_type }}/bc6h'
        #cmake_var: '-DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_BC7_LIBRARY=${{ env.GA_ROOT_DIR }}/build/third_party_libs/nvtt/src/bc7/${{ matrix.config.build_type }}/bc7'
        #cmake_var: '-DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_CORE_LIBRARY=${{ env.GA_ROOT_DIR }}/build/third_party_libs/nvtt/src/nvcore/${{ matrix.config.build_type }}/nvcore'
        #cmake_var: '-DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_IMAGE_LIBRARY=${{ env.GA_ROOT_DIR }}/build/third_party_libs/nvtt/src/nvimage/${{ matrix.config.build_type }}/nvimage'
        #cmake_var: '-DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_MATH_LIBRARY=${{ env.GA_ROOT_DIR }}/build/third_party_libs/nvtt/src/nvmath/${{ matrix.config.build_type }}/nvmath'
        #cmake_var: '-DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_SQUISH_LIBRARY=${{ env.GA_ROOT_DIR }}/build/third_party_libs/nvtt/src/squish/${{ matrix.config.build_type }}/nvsquish'

    - name: Build nvtt
      shell: bash
      working-directory: ${{inputs.working-directory}}
      run: |
        cd third_party_libs/nvtt/
        mkdir build
        cd build
        cmake -G "Unix Makefiles" ../
        cmake --build ./ --verbose

    - name: Define nvtt CMake variables
      uses: Silverlan/common_actions/define_cmake_var@main
      with:
        cmake_var: " -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_THREAD_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/nvthread/libnvthread.a -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_SQUISH_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/nvtt/squish/libnvsquish.a -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_MATH_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/nvmath/libnvmath.a -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_IMAGE_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/nvimage/libnvimage.a -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_CORE_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/nvcore/libnvcore.a -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_BC7_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/bc7/libbc7.a -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_BC6H_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/bc6h/libbc6h.a -DDEPENDENCY_NVIDIA_TEXTURE_TOOLS_LIBRARY=${{inputs.working-directory}}/third_party_libs/nvtt/build/src/nvtt/libnvtt.a "

    - name: Download common external libs
      uses: Silverlan/common_actions/get_common_external_libs@main
      with:
        working-directory: ${{inputs.working-directory}}

    - name: Download submodule - squish
      uses: Silverlan/common_actions/get_submodule@main
      with:
        dir: 'third_party_libs'
        repo: 'https://github.com/ivan-kulikov-dev/squish.git'
        repo_name: 'squish'
        repo_branch: 'master'
        static_library: '1'
        working-directory: ${{inputs.working-directory}}

    - name: Build submodule - zlib
      uses: Silverlan/common_actions/build_zlib@main
      with:
        working-directory: ${{inputs.working-directory}}

    - name: Build submodule - libpng
      uses: Silverlan/common_actions/build_submodule@main
      with:
        repo: 'https://github.com/glennrp/libpng.git'
        repo_name: 'libpng'
        repo_branch: 'libpng16'
        build_target: png
        cmake_var: 'DEPENDENCY_LPNG_INCLUDE'
        cmake_var_lib: 'DEPENDENCY_LPNG_LIBRARY'
        include_dir: '.'
        lib_name: '${{ matrix.config.build_type }}/libpng16'
        working-directory: ${{inputs.working-directory}}
        # cmake_definitions: -DZLIB_INCLUDE_DIR=$GA_ROOT_DIR/third_party_libs/zlib -DZLIB_LIBRARY_RELEASE=$GA_ROOT_DIR/build/third_party_libs/zlib/RelWithDebInfo/zlib.lib
    - name: Copy pnglibconf.h
      shell: bash
      working-directory: ${{inputs.working-directory}}
      run: |
        cp ./build/third_party_libs/libpng/pnglibconf.h ./third_party_libs/libpng/pnglibconf.h

    - uses: Silverlan/common_actions/build_cmake@main
      name: CMake Build
      with:
        build_type: ${{ matrix.config.build_type }}
        build_generator: ${{ matrix.config.generators }}
        cmake_var: 'DEPENDENCY_UTIL_IMAGE_LIBRARY'
        build_target: util_image
        build_dir: './build'
        cmake_script_location: '.'
        working-directory: ${{inputs.working-directory}}
        
    - uses: Silverlan/common_actions/action_end@main
    
