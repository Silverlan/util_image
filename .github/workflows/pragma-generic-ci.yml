name: Build
on:
  push:
    branches: [ master, actions ]
  pull_request:
    branches: [ master, actions ]

jobs:
  # WINDOWS x64 MSVC
  build-windows:
    name: Build-Windows-x64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            namex: "HellooOOoo"
        #config:
        #- os: windows-latest
        #- {
        #    name: "Windows x64 MSVC",
        #    artifact: "Windows-MSVC.tar.xz",
        #    build_type: "RelWithDebInfo",
        #    environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
        #    cc: "cl",
        #    cxx: "cl",
        #    archiver: "7z a",
        #    generators: "Visual Studio 16 2019",
        #    build_dir: 'build'
        #  }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      

      - name: TestX
        shell: bash
        run: |
          echo "Matrix name: ${{matrix.namex}}"
          echo "Matrix name: ${{matrix.config.name}}"
      
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Initialize Env
        id: init-env
        uses: Silverlan/common_actions/set_common_env_vars@actions

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if artifact is from a different repo
          # Required, if repo is private a Personal Access Token with `repo` scope is needed
          # Required, workflow file name or ID
          workflow: pragma-generic-ci.yml
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          workflow_conclusion: success
          # Optional, will get head commit SHA
          pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
          commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the branch
          branch: actions
          # Optional, defaults to all types
          event: push
          # Optional, will use specified workflow run
          #run_id: 1122334455
          # Optional, run number from the workflow
          #run_number: 34
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them in respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          name: build-binaries
          # Optional, directory where to extract artifact. Defaults to the artifact name (see `name` input)
          path: "./build"
          # Optional, defaults to current repo
          repo: ${{github.repository}}
          # Optional, check the workflow run whether it has an artifact
          # then will get the last available artifact from previous workflow
          # default false, just try to download from the last one
          check_artifacts:  false
          
      - name: TestDl
        id: testdl
        shell: bash
        run: |
          if [ -f "/d/a/util_image/util_image/build/third_party_libs/nvtt/src/nvtt/RelWithDebInfo/nvtt.lib" ]; then
            echo "[1] nvtt.lib exists!"
          else
            echo "[1] nvtt.lib does not exist!"
          fi
      
      #- name: Download binaries
      #  uses: Silverlan/common_actions/download_build_binaries@actions
      #  continue-on-error: true
          
      - name: Build
        id: build
        uses: Silverlan/util_image/github_actions/build@actions
          
      - name: Upload binaries
        uses: Silverlan/common_actions/upload_build_binaries@actions
        
      #- uses: actions/upload-artifact@v2.2.4
      #  with:
      #    name: upload-binary
      #    path: |
      #      retention-days: 5
      #      ${{ matrix.config.build_dir }}/**/*${{ env.GA_SHARED_LINK_LIBRARY_EXT }}
      #      ${{ matrix.config.build_dir }}/**/*${{ env.GA_SHARED_BINARY_LIBRARY_EXT }}
      #      ${{ matrix.config.build_dir }}/**/*.h
      #      ${{ matrix.config.build_dir }}/**/*.hpp
